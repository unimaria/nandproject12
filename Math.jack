class Math{
	
	static int qTimes2y;

	function void init()
	{
		return;
	}

	function int abs(int x)
	{
		if(x < 0)
		{
			return -x;
		}

		return x;
	}
		
	function int multiply(int x, int y)
	{
		var int sum, shiftedX, bit, iter, signX, signY;
		let signX = 1;
		let signY = 1;
		if(x < 0)
		{
			let x = Math.abs(x);
			let signX = -1;
		}
		if(y < 0)
		{
			let y = Math.abs(y);
			let signY = -1;
		}
		let sum = 0;
		let iter = 0;
		let shiftedX = x;
		let bit = 1;

		while(iter < 15)
		{
			// checks if the (iter+1) th bit of y is one
			if( (y & bit) = bit )	
			{
				let sum = sum + shiftedX;
			}
			let bit = bit + bit;
			let shiftedX = (shiftedX + shiftedX) & 32767; //todo find better shift
			let iter = iter + 1;
		}
		if( ((signX = 1) & (signY = -1)) | ((signX = -1) & (signY = 1)))
		{
			return -sum;
		}
		return sum;
	}

	function int innerDivide(int x, int y)
	{
		var int q;
		if(y > x)
		{
			return 0;
		}
		if(y < 16384)
		{
			let q = Math.innerDivide(x, y + y);
		}
		else	// y + y > x otherwise overflow
		{
			let q = 0;
		}
		
		if( (x - qTimes2y) < y )
		{
			return q + q;
		}
		else
		{
			let qTimes2y = qTimes2y + y;
			return q + q + 1;
		}
	}
	function int divide(int x, int y)
	{
		var int signX, signY, result;
		// start qTimes2y
		let qTimes2y = 0;
		let signX = 1;
		let signY = 1;
		if(x < 0)
		{
			let x = Math.abs(x);
			let signX = -1;
		}
		if(y < 0)
		{
			let y = Math.abs(y);
			let signY = -1;
		}

		// computes positive integer division
		let result = Math.innerDivide(x, y);

		//makes result the right sign
		if( ((signX = 1) & (signY = -1)) | ((signX = -1) & (signY = 1)) )
		{
			return -result;
		}
		return result;
	}

	function int min(int x, int y)
	{
		if(x < y)
		{
			return x;
		}
		return y;
	}

	function int max(int x, int y)
	{
		if(x > y)
		{
			return x;
		}
		return y;
	}

	function int sqrt(int x)
	{
		var int high, low, root, rootSquared;
		if( (x = 1) | (x = 0) )
		{
			return x;
		}

		// if root > 181 there is overflow 
		// root <= 181 for all integers <= 2^15
		let high = 181;
		let low = 1;

		while(~(high = low))
		{
			let root = Math.divide((high + low), 2);
			let rootSquared = Math.multiply(root, root);
			if(rootSquared > x)
			{
				let high = root - 1;
			}
			else
			{
				if(rootSquared < x)
				{
					let low = root + 1;
				}
				else	// rootSquared = x
				{
					return root;
				}
			}
		}
		return high;
	}
}